(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{218:function(e,t,r){"use strict";r.r(t);var s=r(28),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"vue项目-ie11-浏览器报-promise-未定义的错误"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue项目-ie11-浏览器报-promise-未定义的错误"}},[e._v("#")]),e._v(" vue项目,ie11 浏览器报 Promise 未定义的错误")]),e._v(" "),r("blockquote",[r("p",[e._v("报错：")])]),e._v(" "),r("p",[e._v('{description: "“Promise”未定义", message: "“Promise”未定义", name: "ReferenceEr...", number: -2146823279, stack: "ReferenceEr..."}')]),e._v(" "),r("h4",{attrs:{id:"解决办法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解决办法"}},[e._v("#")]),e._v(" 解决办法")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("1. npm install babel-polyfill --save")])]),e._v(" "),r("li",[r("ol",{attrs:{start:"2"}},[r("li",[e._v('在main.ts中 import "babel-polyfill"')])])]),e._v(" "),r("li",[r("p",[e._v("3. 如果使用了vuex，则在vuex的index.ts文件中也要  import \"babel-polyfill\"，最好放在 import Vuex from 'vuex' 的前面")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);