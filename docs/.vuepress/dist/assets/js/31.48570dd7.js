(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{385:function(t,s,a){"use strict";a.r(s);var e=a(25),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"react"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" React")]),t._v(" "),a("ul",[a("li",[t._v("声名式开发")])]),t._v(" "),a("p",[t._v("命令式开发（jQuery）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("面向数据开发")])]),t._v(" "),a("li",[a("p",[t._v("组件化编程")])]),t._v(" "),a("li",[a("p",[t._v("单向数据流")])]),t._v(" "),a("li",[a("p",[t._v("视图层框架")])]),t._v(" "),a("li",[a("p",[t._v("函数式编程")])])]),t._v(" "),a("p",[t._v("（面向测试编程）")]),t._v(" "),a("p",[t._v("更好的做前端的自动化测试")]),t._v(" "),a("blockquote",[a("p",[t._v("2013年FaceBook推出的函数式编程框架")])]),t._v(" "),a("p",[t._v("React Fiber（React 16版本）")]),t._v(" "),a("h2",{attrs:{id:"基本内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本内容"}},[t._v("#")]),t._v(" 基本内容")]),t._v(" "),a("ul",[a("li",[t._v("create-react-app")]),t._v(" "),a("li",[t._v("组件化思维")]),t._v(" "),a("li",[t._v("jsx")]),t._v(" "),a("li",[t._v("开发调试")]),t._v(" "),a("li",[t._v("虚拟DOM")]),t._v(" "),a("li",[t._v("生命周期")]),t._v(" "),a("li",[t._v("React-transition-group")]),t._v(" "),a("li",[t._v("Redux")]),t._v(" "),a("li",[t._v("Antd")]),t._v(" "),a("li",[t._v("UI、容器组件")]),t._v(" "),a("li",[t._v("无状态组件")]),t._v(" "),a("li",[t._v("redux-thunk")]),t._v(" "),a("li",[t._v("redux-saga")]),t._v(" "),a("li",[t._v("style-components")]),t._v(" "),a("li",[t._v("Immuatable.js")]),t._v(" "),a("li",[t._v("redux-immutable")]),t._v(" "),a("li",[t._v("axios")])]),t._v(" "),a("h2",{attrs:{id:"环境搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境搭建"}},[t._v("#")]),t._v(" 环境搭建")]),t._v(" "),a("p",[t._v("Create-react-app")]),t._v(" "),a("p",[a("code",[t._v("npx create-react-app")])]),t._v(" "),a("h2",{attrs:{id:"基础语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础语法"}},[t._v("#")]),t._v(" 基础语法")]),t._v(" "),a("p",[t._v("React中必须引入react是因为需要编辑jsx")]),t._v(" "),a("p",[a("code",[t._v("import React from 'react';")])]),t._v(" "),a("h3",{attrs:{id:"jsx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx"}},[t._v("#")]),t._v(" JSX")]),t._v(" "),a("p",[a("code",[t._v("{ /* js表达式 */}")])]),t._v(" "),a("p",[a("strong",[t._v("html标签")])]),t._v(" "),a("p",[a("code",[t._v("<div></div>")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("JS中编写HTML，")])]),t._v(" "),a("li",[a("p",[t._v("Fragment\n（自定义组件）\n用于占位符，实现最外层没有标签包裹的情况")])])]),t._v(" "),a("p",[a("code",[t._v("import React, { Fragment } from 'react'")])]),t._v(" "),a("p",[a("code",[t._v("<Fragment><div>666</div></Fragment>")])]),t._v(" "),a("ul",[a("li",[t._v("自定义组件直接使用标签名，且首字母大写")])]),t._v(" "),a("p",[a("code",[t._v("import Input from 'antd'")])]),t._v(" "),a("p",[a("code",[t._v("<Input />")])]),t._v(" "),a("ul",[a("li",[t._v("注释")])]),t._v(" "),a("p",[a("code",[t._v("{/* 注释 */}")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{\n    // 注释\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"响应式设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应式设计"}},[t._v("#")]),t._v(" 响应式设计")]),t._v(" "),a("p",[t._v("** immutable **")]),t._v(" "),a("p",[t._v("state 不允许我们做任何的改变")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n// ES6 return 简写\nthis.setState(() => ({\n    toDoItem: value\n}));\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"事件绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件绑定"}},[t._v("#")]),t._v(" 事件绑定")]),t._v(" "),a("p",[a("code",[t._v("onClick = { this.handleClick }")])]),t._v(" "),a("h2",{attrs:{id:"组件拆分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件拆分"}},[t._v("#")]),t._v(" 组件拆分")]),t._v(" "),a("h3",{attrs:{id:"组件化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件化"}},[t._v("#")]),t._v(" 组件化")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("UI组件和容器组件")])]),t._v(" "),a("li",[a("p",[t._v("无状态组件")])])]),t._v(" "),a("p",[t._v("只有render函数的组件")]),t._v(" "),a("h3",{attrs:{id:"组件传值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件传值"}},[t._v("#")]),t._v(" 组件传值")]),t._v(" "),a("ul",[a("li",[t._v("父 =》子")])]),t._v(" "),a("p",[t._v("属性传值")]),t._v(" "),a("p",[a("code",[t._v("data = { data }")])]),t._v(" "),a("p",[a("code",[t._v("this.props.data")])]),t._v(" "),a("ul",[a("li",[t._v("子 =》父")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    // 父组件中\n    <Child onClick={this.handleClick} age={this.state.age} name={this.state.name}></Child>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    // 子组件触发\n    <button onClick={this.props.onClick}>点击</button>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"props校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props校验"}},[t._v("#")]),t._v(" props校验")]),t._v(" "),a("p",[t._v("// props的校验\nReduxItem.propTypes = {\nindex: PropTypes.number,\nitem: PropTypes.oneOfType([PropTypes.string, PropTypes.number]) // 包含某一个\n};")]),t._v(" "),a("p",[t._v("// 默认值\nReduxItem.defaultProps = {\nitem: 'toDoItem'\n};")]),t._v(" "),a("h2",{attrs:{id:"生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),a("p",[t._v("生命周期函数指在某一个时刻组件会自动调用执行的函数")]),t._v(" "),a("ul",[a("li",[t._v("Initialization:初始化阶段。")]),t._v(" "),a("li",[t._v("Mounting: 挂载阶段。")]),t._v(" "),a("li",[t._v("Updation: 更新阶段。")]),t._v(" "),a("li",[t._v("Unmounting: 销毁阶段")])]),t._v(" "),a("h3",{attrs:{id:"mounting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mounting"}},[t._v("#")]),t._v(" Mounting")]),t._v(" "),a("p",[t._v("componentWillMount() {\nconsole.log('componentWillMount----组件将要挂载到页面的时刻')\n}")]),t._v(" "),a("p",[t._v("componentDidMount() {\nconsole.log('componentDidMount----组件挂载完成的时刻执行')\n}")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("componentWillMount和componentDidMount这两个生命周期函数，只在页面刷新时执行一次，\n而render函数是只要有state和props变化就会执行")])]),t._v(" "),a("h2",{attrs:{id:"redux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redux"}},[t._v("#")]),t._v(" Redux")]),t._v(" "),a("p",[t._v("Redux = Reducer + Flux")]),t._v(" "),a("p",[t._v("数据层框架")]),t._v(" "),a("h3",{attrs:{id:"规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规则"}},[t._v("#")]),t._v(" 规则")]),t._v(" "),a("ul",[a("li",[t._v("State 是只读的，唯一修改它的方式是 actions。")]),t._v(" "),a("li",[t._v("更新的唯一方式：dispatch(action) -> reducer -> new state。")]),t._v(" "),a("li",[t._v("Reducer 函数必须是“纯”的 —— 不能修改它的参数，也不能有副作用（side effect）。")]),t._v(" "),a("li",[t._v("只有store能够改变自己的内容")])]),t._v(" "),a("h3",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("ul",[a("li",[t._v("createStore")]),t._v(" "),a("li",[t._v("store.dispatch")]),t._v(" "),a("li",[t._v("state.getState()")]),t._v(" "),a("li",[t._v("state.subscribe()")])]),t._v(" "),a("h2",{attrs:{id:"react-redux使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-redux使用"}},[t._v("#")]),t._v(" react-redux使用")]),t._v(" "),a("p",[t._v("要做到这一点，要用到 react-redux 库的两样东西：")]),t._v(" "),a("ul",[a("li",[t._v("Provider 的组件")])]),t._v(" "),a("p",[t._v("通过Provider包装整个应用，使得每个组件都能访问 Redux store")]),t._v(" "),a("p",[t._v("在 index.js 里，引入 Provider 然后用它把 App 的内容包装起来。store 会以 prop 形式传递。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Provider "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-dedux'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" store "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-dedux'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    reducer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__REDUX_DEVTOOLS_EXTENSION__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__REDUX_DEVTOOLS_EXTENSION__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调试redux用的")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("App")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Provider store "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" store "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("App "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Provider"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("ul",[a("li",[t._v("connect 函数。")])]),t._v(" "),a("p",[t._v("我们需要在我们的组件使用 connect 函数来访问 store")]),t._v(" "),a("p",[t._v("react-redux中的connect方法将store上的getState 和 dispatch 包装成组件的props。")]),t._v(" "),a("p",[t._v("connect() 接收四个参数，它们分别是 mapStateToProps ， mapDispatchToProps， mergeProps 和 options 。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用connect函数包装起来")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("mapStateToProps")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       toDoList"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toDoList\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 高阶函数(connect)，传入一个组件，包装后继续返回这个组件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mapStateToProps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ToDoList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h3",{attrs:{id:"进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进阶"}},[t._v("#")]),t._v(" 进阶")]),t._v(" "),a("p",[t._v("actionTypes的拆分")]),t._v(" "),a("p",[t._v("将action.type常量化")]),t._v(" "),a("h2",{attrs:{id:"原理进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理进阶"}},[t._v("#")]),t._v(" 原理进阶")]),t._v(" "),a("h2",{attrs:{id:"动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动画"}},[t._v("#")]),t._v(" 动画")]),t._v(" "),a("h2",{attrs:{id:"实战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实战"}},[t._v("#")]),t._v(" 实战")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("环境搭建")])]),t._v(" "),a("li",[a("p",[t._v("组件")])]),t._v(" "),a("li",[a("p",[t._v("登录校验")])]),t._v(" "),a("li",[a("p",[t._v("上线1")])])]),t._v(" "),a("h2",{attrs:{id:"git-checkout-b-master"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-b-master"}},[t._v("#")]),t._v(" git checkout -b master")])])}),[],!1,null,null,null);s.default=n.exports}}]);