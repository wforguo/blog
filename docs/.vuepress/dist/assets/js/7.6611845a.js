(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{208:function(a,t,s){"use strict";s.r(t);var n=s(0),r=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"js上下文的概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js上下文的概念"}},[a._v("#")]),a._v(" js上下文的概念")]),a._v(" "),s("ul",[s("li",[a._v("js存在上下文的概念，并且是可以改变的；")])]),a._v(" "),s("h2",{attrs:{id:"apply和call"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#apply和call"}},[a._v("#")]),a._v(" apply和call")]),a._v(" "),s("p",[a._v("call 和 apply 是为了动态改变this而出现的，")]),a._v(" "),s("p",[a._v("当一个 object 没有某个方法，但是其他的有，我们可以借助call或apply用其它对象的方法来操作。")]),a._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[a._v("func")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("arg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" arg2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n         \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" arg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" arg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("arg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" arg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("ul",[s("li",[a._v("apply 、 call 、bind 三者都是用来改变函数的this对象的指向的；")]),a._v(" "),s("li",[a._v("apply 、 call 、bind 三者第一个参数都是this要指向的对象，也就是想指定的上下文；")]),a._v(" "),s("li",[a._v("apply 、 call 、bind 三者都可以利用后续参数传参；")]),a._v(" "),s("li",[a._v("bind 是返回对应函数，便于稍后调用；apply 、call 则是立即调用 。")])])])}),[],!1,null,null,null);t.default=r.exports}}]);